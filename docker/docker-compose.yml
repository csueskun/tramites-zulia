services:
  php:
    container_name: tramites-php
    build:
      context: .
      dockerfile: ./php/Dockerfile
    volumes:
      - ../laravel:/var/www/html
    # expose:
    #   - "9000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "chown -R 1000:1000 /var/www/html &&
      chown -R www-data:www-data /var/www/html/storage/framework && 
      chown -R www-data:www-data /var/www/html/storage/logs && 
      chown -R www-data:www-data /var/www/html/storage/app/public && 
      composer require laravel-lang/common --dev && 
      php artisan lang:update && 
      php artisan migrate --force && 
      php-fpm"
    # command: >
    #   sh -c "chown -R www-data:www-data /var/www/html/storage && 
    #   chown -R www-data:www-data /var/www/html/storage/logs && 
    #   chown -R www-data:www-data /var/www/html/app && 
    #   composer require laravel-lang/common --dev && 
    #   php artisan lang:update && 
    #   php artisan migrate:fresh --seed && 
    #   php-fpm"

  web:
    container_name: tramites-apache
    build:
      context: .
      dockerfile: ./apache/Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ../laravel:/usr/local/apache2/htdocs
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
    depends_on:
      - php

  db:
    container_name: tramites-mysql
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: tramites_db
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/:ro
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-psecret" ]
      interval: 5s
      retries: 5
      start_period: 10s

  phpmyadmin:
    container_name: tramites-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: secret
    depends_on:
      - db

  # node:
  #   build:
  #     context: .
  #     dockerfile: ./node/Dockerfile
  #   container_name: node-server
  #   working_dir: /usr/src/app
  #   volumes:
  #     - ../push-server:/usr/src/app
  #   ports:
  #     - "3000:3000"
  #   command: [ "node", "index.js" ]

volumes:
  mysql-data:
